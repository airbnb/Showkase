import org.gradle.internal.jvm.Jvm

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    // Added to avoid this error -
    // Execution failed for task ':showkase-processor-testing:mergeDebugAndroidTestJavaResource'.
    // > A failure occurred while executing com.android.build.gradle.internal.tasks.Workers$ActionFacade
    // > More than one file was found with OS independent path 'META-INF/gradle/incremental.annotation.processors'
    packagingOptions {
        exclude 'META-INF/gradle/incremental.annotation.processors'
        exclude("META-INF/*.kotlin_module")
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerVersion "${versions.kotlinCompilerVersion}"
        kotlinCompilerExtensionVersion "${versions.compose}"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation deps.kotlinStdLib

    // Support Libraries
    implementation deps.support.appCompat

    // Showkase
    implementation project(':showkase')
    kapt project(':showkase-processor')
    implementation project(':showkase-processor')

    // Compose
    implementation deps.compose.composeRuntime
    implementation deps.compose.core
    implementation deps.compose.foundation
    androidTestImplementation deps.compose.uiTest

    // Testing
    testImplementation deps.test.assertJ
    testImplementation deps.test.googleTruth
    testImplementation deps.test.junit
    androidTestImplementation deps.test.junitImplementation
    androidTestImplementation deps.test.androidXTestCore
    androidTestImplementation deps.test.androidXTestRules
    androidTestImplementation deps.test.androidxTestRunner
    // Allows this module to access the annotation processor related classes. Otherwise those are 
    // only available in java library modules. Inspiration - 
    // https://github.com/airbnb/epoxy/blob/master/epoxy-processortest/build.gradle
    testImplementation files(getRuntimeJar())
    testImplementation files(Jvm.current().getToolsJar())
    testImplementation deps.kotlinCompileTesting
}

static def getRuntimeJar() {
    try {
        final File javaBase = new File(System.getProperty("java.home")).getCanonicalFile()
        File runtimeJar = new File(javaBase, "lib/rt.jar")
        if (runtimeJar.exists()) {
            return runtimeJar
        }
        runtimeJar = new File(javaBase, "jre/lib/rt.jar")
        return runtimeJar.exists() ? runtimeJar : null
    } catch (IOException e) {
        throw new RuntimeException(e)
    }
}
