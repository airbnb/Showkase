apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 32
    // Added to avoid this error -
    // Execution failed for task ':showkase-processor-testing:mergeDebugAndroidTestJavaResource'.
    // > A failure occurred while executing com.android.build.gradle.internal.tasks.Workers$ActionFacade
    // > More than one file was found with OS independent path 'META-INF/gradle/incremental.annotation.processors'
    packagingOptions {
        exclude 'META-INF/gradle/incremental.annotation.processors'
        exclude("META-INF/*.kotlin_module")
        // Added to avoid this error -
        // Execution failed for task ':app:mergeDebugAndroidTestJavaResource'.
        // > A failure occurred while executing com.android.build.gradle.internal.tasks.MergeJavaResWorkAction
        // > 2 files found with path 'META-INF/AL2.0' from inputs:
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 32
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerVersion "${versions.kotlinCompilerVersion}"
        kotlinCompilerExtensionVersion "${versions.composeCompiler}"
    }
    configurations {
        all {
            // work around this error:
            // Duplicate class org.intellij.lang.annotations.Identifier found in modules annotations-12.0 (com.intellij:annotations:12.0) and annotations-13.0 (org.jetbrains:annotations:13.0)
            exclude group: "com.intellij", module: "annotations"
        }
    }
}

dependencies {
    // Allows this module to access the annotation processor related classes. Otherwise those are
    // only available in java library modules. Inspiration -
    // https://github.com/airbnb/epoxy/blob/master/epoxy-processortest/build.gradle
    testImplementation files('libs/rt.jar')

    // Support Libraries
    implementation deps.support.appCompat

    // Showkase
    implementation project(':showkase')
    implementation project(':showkase-processor')
    implementation project(':showkase-screenshot-testing')

    // KSP
    implementation deps.ksp

    // Compose
    implementation deps.compose.activityCompose
    implementation deps.compose.composeRuntime
    implementation deps.compose.core
    implementation deps.compose.foundation
    implementation deps.compose.tooling

    // Material
    implementation deps.material.material
    implementation deps.material.mdcComposeThemeAdapter

    // Testing
    testImplementation deps.test.assertJ
    testImplementation deps.test.googleTruth
    testImplementation deps.test.junit
    testImplementation deps.kotlinCompileTesting
    testImplementation deps.kotlinCompileTestingKsp
    testImplementation project(':showkase-screenshot-testing-paparazzi')
    // Force the version of paparazzi for Processor tests to be one that uses kotlin 1.7.10.
    // This is because kotlin compiler testing library is not able to support Kotlin 1.7.20, which
    // the latest version of Paparazzi uses. This was causing the following error when the tests
    // from this module were executing
    // e: java.lang.NoSuchMethodError: 'void org.jetbrains.kotlin.codegen.state.KotlinTypeMapper.<init>
    // at com.google.devtools.ksp.processing.impl.ResolverImpl.<init>(ResolverImpl.kt:143)
    // at com.google.devtools.ksp.AbstractKotlinSymbolProcessingExtension.doAnalysis(KotlinSymbolProcessingExtension.kt:188)
    testImplementation "app.cash.paparazzi:paparazzi:1.1.0"
}

// Needed for Java17 otherwise these tests failed to run locally.
// More info - https://youtrack.jetbrains.com/issue/KT-45545/Kapt-is-not-compatible-with-JDK-16
tasks.withType(Test) {
    if (JavaVersion.current() >= JavaVersion.VERSION_16) {
        jvmArgs(
                "--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
                "--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED",
        )
    }
}
